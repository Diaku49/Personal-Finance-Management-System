// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Type {
  INCOME
  EXPENSE
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime?
  categories   Category[]
  transactions Transaction[]
  savingGoals  SavingGoal[]
  authDate     DateTime?
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String
  type         Type
  user         User          @relation(fields: [userId], references: [id])
  userId       Int
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime?
}

model Transaction {
  id          Int      @id @default(autoincrement())
  description String
  amount      Decimal
  date        DateTime
  type        Type
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
}

model SavingGoal {
  id            Int      @id @default(autoincrement())
  name          String
  targetAmount  Decimal
  currentAmount Decimal
  targetDate    DateTime
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
}
